version: 2

defaults: &defaults
  working_directory: ~/we-vue
  docker:
    - image: circleci/node:10.15.3-browsers-legacy

jobs:
  # ----------------------------------------------------------
  # Phase 1: Setup
  # ----------------------------------------------------------
  setup:
    <<: *defaults
    steps:
      # Checkout repository
      - checkout

      # Restore cache
      - restore_cache:
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - yarn-packages-{{ .Branch }}-

      # Install dependencies
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile --non-interactive

      # Save cache
      - save_cache:
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - packages/*/node_modules

      # Persist workspace
      - persist_to_workspace:
          root: ~/we-vue
          paths:
            - node_modules
            - packages/*/node_modulels
            - packages/*/dist

  # ----------------------------------------------------------
  # Phase 2: Test lib and update coverage result
  # ----------------------------------------------------------
  test-lib:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/we-vue

      # test packages/we-vue
      - run: yarn test:coverage

      # update codecov stats
      - run: yarn lerna run coverage --scope we-vue --stream

  # ----------------------------------------------------------
  # Phase 3: Build and deploy demo
  # ----------------------------------------------------------
  build-deploy-demo:
    <<: *defaults

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "6a:aa:77:77:28:51:9f:01:4b:b2:7e:3e:ea:f6:20:1a"

      - run: echo -e "Host $DEPLOY_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      # Install rsync
      - run: sudo apt install rsync -y

      - attach_workspace:
          at: ~/we-vue

      # build component lib and distã€Šbecause demo needs to import it)
      - run: yarn lerna run build --scope we-vue

      # build demo
      - run: yarn lerna run build --scope demo --stream

      # deploy demo
      - deploy:
          name: Deploy Demo
          when: on_success
          command: |
            rsync -vzrtopg --progress -e ssh --delete packages/demo/dist/* $DEPLOY_USER@$DEPLOY_HOST:/data/wwwroot/demo.wevue.org

  # ----------------------------------------------------------
  # Phase 3: Generate and deploy docs
  # ----------------------------------------------------------
  generate-deploy-docs:
    <<: *defaults

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "6a:aa:77:77:28:51:9f:01:4b:b2:7e:3e:ea:f6:20:1a"

      - run: echo -e "Host $DEPLOY_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      # Install rsync
      - run: sudo apt install rsync -y

      - attach_workspace:
          at: ~/we-vue

      # build demo and docs
      - run: yarn lerna run generate --scope docs --stream

      # deploy docs
      - deploy:
          name: Deploy Docs
          when: on_success
          command: |
            rsync -vzrtopg --progress -e ssh --delete packages/docs/dist/* $DEPLOY_USER@$DEPLOY_HOST:/data/wwwroot/wevue.org

workflows:
  version: 2

  # test lib and update codecove stats after commit to master branch.
  lib-and-demo:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master
      - test-lib:
          requires:
            - setup
          filters:
            branches:
              only:
                - master
      - build-deploy-demo:
          requires:
            - test-lib
          filters:
            branches:
              only:
                - master

  # Generate docs and deploy it
  docs:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master
                - docs
      - generate-deploy-docs:
          requires:
            - setup
          filters:
            branches:
              only:
                - master
                - docs
